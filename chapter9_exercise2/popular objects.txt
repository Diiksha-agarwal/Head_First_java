=======================================question====================================================
                                Popular Objects

In this code example, several new objects are created.
Your challenge is to find the object that is “most popular,”
i.e., the one that has the most reference variables referring to it. Then list how many total 
references there are for that object, and what they are! We’ll start by pointing
out one of the new objects and its reference variable.
Good luck!

class Bees {
    Honey[] beeHoney;
}

class Raccoon {
    Kit rk;
    Honey rh;
}

class Kit {
    Honey honey;
}

class Bear {
    Honey hunny;
}

public class Honey {
    public static void main(String[] args) {
        Honey honeyPot = new Honey();
        Honey[] ha = {honeyPot, honeyPot, honeyPot, honeyPot};
        Bees bees = new Bees();
        bees.beeHoney = ha;
        Bear[] bears = new Bear[5];
        for (int i = 0; i < 5; i++) {
            bears[i] = new Bear();
            bears[i].hunny = honeyPot;
        }
        Kit kit = new Kit();
        kit.honey = honeyPot;
        Raccoon raccoon = new Raccoon();
        raccoon.rh = honeyPot;
        raccoon.rk = kit;
        kit = null;
    } // end of main
}

==================================================================================================
The obvious answer is the honey object with 12 references.
even though kit is set to null the object is still referenced through rakoon.rk.
